import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import MainLayout from '../components/layout/MainLayout';
import Button from '../components/ui/Button';
import Card from '../components/ui/Card';
import Input from '../components/ui/Input';
import Badge from '../components/ui/Badge';
import Loader from '../components/ui/Loader';
import { addNotification } from '../store/slices/uiSlice';
import { RootState } from '../store';

const Dashboard: React.FC = () => {
  const dispatch = useDispatch();
  const theme = useSelector((state: RootState) => (state as any).ui.theme);
  
  // Modules data (would typically come from the modules slice)
  const modules = [
    {
      id: '1',
      title: 'Introduction to Cybersecurity',
      description: 'Learn the basics of cybersecurity and why it matters.',
      category: 'Fundamentals',
      difficulty: 'beginner',
      duration: 30,
    },
    {
      id: '2',
      title: 'Password Security',
      description: 'Techniques for creating and managing secure passwords.',
      category: 'Security Practices',
      difficulty: 'beginner',
      duration: 45,
    },
    {
      id: '3',
      title: 'Recognizing Phishing Attempts',
      description: 'How to identify and avoid phishing scams online.',
      category: 'Threat Detection',
      difficulty: 'intermediate',
      duration: 60,
    },
  ];

  // Demo function to test notifications
  const sendNotification = (type: 'success' | 'error' | 'info' | 'warning') => {
    const messages = {
      success: 'Operation completed successfully!',
      error: 'An error occurred while processing your request.',
      info: 'Your progress has been saved automatically.',
      warning: 'Your session will expire in 5 minutes.',
    };
    
    dispatch(addNotification({
      type,
      message: messages[type],
    }));
  };

  return (
    <MainLayout>
      <div className="dashboard-container p-4 md:p-6">
        {/* Page Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold mb-2">Dashboard</h1>
          <p className="text-gray-600 dark:text-gray-300">
            Welcome to your CyberSafe dashboard. Here's your learning progress.
          </p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
          <Card className="bg-blue-50 dark:bg-blue-900 border-blue-100 dark:border-blue-800">
            <div className="flex items-center">
              <div className="rounded-full bg-blue-500 p-3 mr-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-white">
                  <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                </svg>
              </div>
              <div>
                <h3 className="font-semibold text-gray-700 dark:text-gray-200">Modules Completed</h3>
                <p className="text-2xl font-bold">3/10</p>
              </div>
            </div>
          </Card>

          <Card className="bg-green-50 dark:bg-green-900 border-green-100 dark:border-green-800">
            <div className="flex items-center">
              <div className="rounded-full bg-green-500 p-3 mr-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-white">
                  <circle cx="12" cy="8" r="7"></circle>
                  <polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>
                </svg>
              </div>
              <div>
                <h3 className="font-semibold text-gray-700 dark:text-gray-200">Badges Earned</h3>
                <p className="text-2xl font-bold">5</p>
              </div>
            </div>
          </Card>

          <Card className="bg-purple-50 dark:bg-purple-900 border-purple-100 dark:border-purple-800">
            <div className="flex items-center">
              <div className="rounded-full bg-purple-500 p-3 mr-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-white">
                  <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
                  <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
                </svg>
              </div>
              <div>
                <h3 className="font-semibold text-gray-700 dark:text-gray-200">Current Streak</h3>
                <p className="text-2xl font-bold">7 days</p>
              </div>
            </div>
          </Card>

          <Card className="bg-amber-50 dark:bg-amber-900 border-amber-100 dark:border-amber-800">
            <div className="flex items-center">
              <div className="rounded-full bg-amber-500 p-3 mr-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-white">
                  <circle cx="12" cy="12" r="10"></circle>
                  <polyline points="12 6 12 12 16 14"></polyline>
                </svg>
              </div>
              <div>
                <h3 className="font-semibold text-gray-700 dark:text-gray-200">Time Spent</h3>
                <p className="text-2xl font-bold">5.2 hrs</p>
              </div>
            </div>
          </Card>
        </div>

        {/* Learning Modules */}
        <div className="mb-8">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-2xl font-bold">Learning Modules</h2>
            <Button variant="primary">View All</Button>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {modules.map((module) => (
              <Card key={module.id} className="h-full">
                <Card.Header>
                  <h3 className="font-bold text-lg">{module.title}</h3>
                  <div className="flex mt-2 space-x-2">
                    <Badge variant={module.difficulty === 'beginner' ? 'success' : 'warning'}>
                      {module.difficulty}
                    </Badge>
                    <Badge variant="info">{module.duration} min</Badge>
                  </div>
                </Card.Header>
                <Card.Body>
                  <p className="text-gray-600 dark:text-gray-300 mb-4">{module.description}</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400">Category: {module.category}</p>
                </Card.Body>
                <Card.Footer className="flex justify-between">
                  <Button variant="secondary" size="sm">Details</Button>
                  <Button variant="primary" size="sm">Start</Button>
                </Card.Footer>
              </Card>
            ))}
          </div>
        </div>

        {/* Notification Demo */}
        <div className="mb-8">
          <Card>
            <Card.Header>
              <h2 className="text-xl font-bold">Notification Center Demo</h2>
            </Card.Header>
            <Card.Body>
              <p className="mb-4">Click the buttons below to test different notification types:</p>
              <div className="flex flex-wrap gap-2">
                <Button variant="success" onClick={() => sendNotification('success')}>Success</Button>
                <Button variant="danger" onClick={() => sendNotification('error')}>Error</Button>
                <Button variant="info" onClick={() => sendNotification('info')}>Info</Button>
                <Button variant="warning" onClick={() => sendNotification('warning')}>Warning</Button>
              </div>
            </Card.Body>
          </Card>
        </div>

        {/* UI Components Demo */}
        <div className="mb-8">
          <Card>
            <Card.Header>
              <h2 className="text-xl font-bold">UI Components</h2>
            </Card.Header>
            <Card.Body>
              <div className="space-y-6">
                {/* Buttons */}
                <div>
                  <h3 className="font-semibold mb-2">Buttons</h3>
                  <div className="flex flex-wrap gap-2">
                    <Button variant="primary">Primary</Button>
                    <Button variant="secondary">Secondary</Button>
                    <Button variant="success">Success</Button>
                    <Button variant="danger">Danger</Button>
                    <Button variant="warning">Warning</Button>
                    <Button variant="info">Info</Button>
                  </div>
                </div>

                {/* Button Sizes */}
                <div>
                  <h3 className="font-semibold mb-2">Button Sizes</h3>
                  <div className="flex flex-wrap items-center gap-2">
                    <Button variant="primary" size="sm">Small</Button>
                    <Button variant="primary" size="md">Medium</Button>
                    <Button variant="primary" size="lg">Large</Button>
                  </div>
                </div>

                {/* Input Fields */}
                <div>
                  <h3 className="font-semibold mb-2">Input Fields</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Input
                      label="Username"
                      placeholder="Enter your username"
                    />
                    <Input
                      label="Password"
                      type="password"
                      placeholder="Enter your password"
                    />
                    <Input
                      label="Email"
                      placeholder="Enter your email"
                      error="Invalid email format"
                    />
                    <Input
                      label="Description"
                      placeholder="Tell us about yourself"
                      helperText="Maximum 200 characters"
                    />
                  </div>
                </div>

                {/* Badges */}
                <div>
                  <h3 className="font-semibold mb-2">Badges</h3>
                  <div className="flex flex-wrap gap-2">
                    <Badge variant="primary">Primary</Badge>
                    <Badge variant="secondary">Secondary</Badge>
                    <Badge variant="success">Success</Badge>
                    <Badge variant="danger">Danger</Badge>
                    <Badge variant="warning">Warning</Badge>
                    <Badge variant="info">Info</Badge>
                  </div>
                </div>

                {/* Loaders */}
                <div>
                  <h3 className="font-semibold mb-2">Loaders</h3>
                  <div className="flex flex-wrap items-center gap-6">
                    <Loader size="sm" />
                    <Loader size="md" />
                    <Loader size="lg" />
                    <div className="flex items-center gap-2">
                      <Loader size="sm" />
                      <span>Loading...</span>
                    </div>
                  </div>
                </div>
              </div>
            </Card.Body>
          </Card>
        </div>
      </div>
    </MainLayout>
  );
};

export default Dashboard;
